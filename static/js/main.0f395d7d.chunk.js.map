{"version":3,"sources":["components/header/styled.ts","components/header/Header.tsx","components/repo/styled.ts","components/footer/styled.ts","components/footer/Footer.tsx","components/input/styled.ts","components/input/Input.tsx","components/recent/styled.ts","components/recent/Recent.tsx","apollo/client/index.ts","hooks/useLazyQuery.ts","components/repo/Repo.tsx","components/spinner/styled.ts","components/spinner/Spinner.tsx","components/list/styled.ts","components/list/List.tsx","components/app/styled.ts","components/app/utils/updateHistory.tsx","components/app/App.tsx","index.tsx"],"names":["HeaderDiv","styled","div","Header","StyledRepo","li","Text","IconContainer","Icon","Link","a","FooterDiv","TextLink","SVGLink","Footer","href","title","icon","MarkGithub","verticalAlign","size","InputDiv","Clear","span","Input","value","onChange","clearInput","htmlFor","id","type","placeholder","className","onClick","RecentDiv","Panel","Button","button","Arrow","CollapsableListDiv","ul","HistoryItem","Recent","searchHistory","getSearchStringFromHistory","useState","isCollapsed","changeCollapseState","handleClick","searchWord","list","length","map","index","key","onKeyDown","role","tabIndex","currentIcon","ChevronUp","ChevronDown","data-testid","QUERY","gql","client","ApolloClient","uri","useCustomQuery","searchString","updateHistory","useApolloQuery","variables","notifyOnNetworkStatusChange","skip","onCompleted","data","loading","error","fetchMore","updateQuery","prev","fetchMoreResult","search","edges","repos","message","lastItemCursor","cursor","after","err","Repo","homepageUrl","name","description","url","stargazers","watchers","target","rel","Globe","CircleSlash","Star","totalCount","Eye","Wrapper","Spinner","CSSTransition","in","timeout","mountOnEnter","unmountOnExit","color","height","width","ListDiv","StyledUl","List","props","onScroll","e","currentTarget","scrollHeight","scrollTop","clientHeight","node","Container","includes","unshift","pop","App","setSearchString","setHistory","event","updatedHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f395d7d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst HeaderDiv = styled.div`\n  grid-area: header;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  font-size: 2rem;\n  @media (min-width: 1024px) {\n    justify-content: flex-end;\n  }\n`;\n\nexport default HeaderDiv;\n","import React from \"react\";\nimport HeaderDiv from \"./styled\";\n\nconst Header = () => <HeaderDiv>GITHUB SEARCH</HeaderDiv>;\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const StyledRepo = styled.li`\n  list-style-type: none;\n  box-shadow: inset 0px 0px 5px #262323;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0.5em;\n  margin-bottom: 1em;\n  border-radius: 4px;\n  @media (min-width: 576px) {\n    flex-wrap: nowrap;\n    align-items: center;\n  }\n`;\nexport const Text = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: center;\n  word-break: break-word;\n`;\nexport const IconContainer = styled.div`\n  display: flex;\n  font-size: 0.5rem;\n  width: 100%;\n  border: 4px double #262323;\n  box-shadow: inset -1px 0px 5px #262323;\n  @media (min-width: 576px) {\n    justify-content: center;\n    box-sizing: border-box;\n    flex-flow: row wrap;\n    font-size: 1vmax;\n    width: 14vmax;\n    min-width: 14vmax;\n    height: 14vmax;\n    min-height: 14vmax;\n  }\n  @media (min-width: 1024px) {\n    font-size: 0.9vmin;\n    width: 14vmin;\n    min-width: 14vmin;\n    height: 14vmin;\n    min-height: 14vmin;\n  }\n`;\nexport const Icon = styled.div`\n  flex-basis: 50%;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5em;\n  box-sizing: border-box;\n  overflow: hidden;\n  & .not-allowed {\n    white-space: nowrap;\n    cursor: not-allowed;\n    font-size: 0.95em;\n    display: contents;\n    @media (min-width: 576px) and (max-width: 1024px) {\n      letter-spacing: -0.05em;\n    }\n  }\n`;\nexport const Link = styled.a`\n  text-decoration: none;\n  color: black;\n  &:visited,\n  :hover,\n  :active {\n    color: black;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"../repo/styled\";\n\nexport const FooterDiv = styled.div`\n  grid-area: footer;\n  text-transform: uppercase;\n  font-weight: bold;\n  user-select: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5vmax;\n`;\nexport const TextLink = styled.div`\n  flex: 1 0 auto;\n  display: none;\n  @media (min-width: 576px) {\n    display: flex;\n  }\n`;\nexport const SVGLink = styled(Link)`\n  @media (max-width: 1023px) {\n    margin: 0.3rem 0;\n  }\n`;\n","import React from \"react\";\nimport Octicon, { MarkGithub } from \"@primer/octicons-react\";\nimport { FooterDiv, TextLink, SVGLink } from \"./styled\";\n\nconst Footer = () => (\n  <FooterDiv>\n    <TextLink>https://github.com/lu4ezar/github-search-graphql</TextLink>\n    <SVGLink\n      href=\"https://github.com/lu4ezar/github-search-graphql\"\n      title=\"view src on Github\"\n    >\n      <Octicon icon={MarkGithub} verticalAlign=\"middle\" size=\"medium\" />\n    </SVGLink>\n  </FooterDiv>\n);\n\nexport default Footer;\n","import styled from \"styled-components\";\n\nexport const InputDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  grid-area: aside_input;\n  & label {\n    max-width: 90%;\n    padding: 0.5rem 0;\n  }\n  & input {\n    background: transparent;\n    border: 0;\n    outline: 0;\n    border-bottom: 2px solid black;\n    margin-bottom: 0.1rem;\n    text-align: center;\n    font-weight: bold;\n    font-size: 1rem;\n    width: 100%;\n    @media (min-width: 1024px) {\n      font-size: 1.5rem;\n    }\n    &::placeholder {\n      font-weight: normal;\n      font-style: italic;\n    }\n  }\n`;\nexport const Clear = styled.span`\n  width: 0;\n  position: relative;\n  right: 1em;\n  cursor: pointer;\n  color: #262323;\n  visibility: hidden;\n  font-weight: bold;\n  &.show {\n    visibility: visible;\n  }\n`;\n","import React from \"react\";\nimport { InputDiv, Clear } from \"./styled\";\nimport { InputProps } from \"../../interfaces\";\n\nconst Input = ({ value, onChange, clearInput }: InputProps) => (\n  <InputDiv>\n    <label htmlFor=\"search\">\n      <input\n        id=\"search\"\n        type=\"search\"\n        onChange={onChange}\n        placeholder=\"github-search-graphql\"\n        value={value}\n      />\n    </label>\n    <Clear\n      className={value ? \"show\" : \"\"}\n      onClick={clearInput}\n      title=\"clear input\"\n    >\n      &times;\n    </Clear>\n  </InputDiv>\n);\n\nexport default Input;\n","import styled from \"styled-components\";\n\nexport const RecentDiv = styled.div`\n  grid-area: aside_recent;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Panel = styled.div`\n  display: flex;\n  height: 2rem;\n`;\nexport const Button = styled.button`\n  background-color: transparent;\n  color: #262323;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 1rem;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  @media (min-width: 1024px) {\n    cursor: auto;\n  }\n`;\nexport const Arrow = styled.span`\n  position: relative;\n  right: -2rem;\n  @media (min-width: 1024px) {\n    display: none;\n  }\n`;\nexport const CollapsableListDiv = styled.ul`\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  max-height: 100%;\n  transition: max-height 0.2s;\n  &.collapsed {\n    max-height: 0px;\n    transition: max-height 0.2s;\n    @media (min-width: 1024px) {\n      max-height: 100%;\n    }\n  }\n`;\nexport const HistoryItem = styled.li`\n  list-style-type: none;\n  text-transform: lowercase;\n  font-style: italic;\n  cursor: pointer;\n  margin: 0.5rem;\n  font-weight: normal;\n  transition: background 0.4s;\n  border-radius: 2px;\n  padding: 0.2rem;\n  text-align: center;\n  outline: none;\n  &:hover {\n    background: #e6e6e6;\n  }\n`;\n","import React, { useState } from \"react\";\nimport Octicon, { ChevronUp, ChevronDown } from \"@primer/octicons-react\";\nimport {\n  HistoryItem,\n  RecentDiv,\n  Panel,\n  Arrow,\n  Button,\n  CollapsableListDiv\n} from \"./styled\";\nimport { SearchString, RecentProps } from \"../../interfaces\";\n\nconst Recent = ({ searchHistory, getSearchStringFromHistory }: RecentProps) => {\n  const [isCollapsed, changeCollapseState] = useState(true);\n  const handleClick = (searchWord: SearchString) => {\n    changeCollapseState(true);\n    getSearchStringFromHistory(searchWord);\n  };\n  const list = searchHistory.length\n    ? searchHistory.map((searchWord, index: number) => (\n        <HistoryItem\n          title={`search for \"${searchWord}\" again`}\n          key={searchWord}\n          onClick={() => handleClick(searchWord)}\n          onKeyDown={() => handleClick(searchWord)}\n          role=\"button\"\n          tabIndex={index}\n        >\n          {searchWord}\n        </HistoryItem>\n      ))\n    : null;\n  const onClick = () =>\n    isCollapsed ? changeCollapseState(false) : changeCollapseState(true);\n  const currentIcon = isCollapsed ? ChevronUp : ChevronDown;\n  return (\n    <RecentDiv>\n      <Panel>\n        <Button type=\"button\" onClick={onClick}>\n          Search History\n          {!!searchHistory.length && (\n            <Arrow title=\"expand/collapse\">\n              <Octicon icon={currentIcon} size=\"medium\" />\n            </Arrow>\n          )}\n        </Button>\n      </Panel>\n      <CollapsableListDiv\n        className={isCollapsed ? \"collapsed\" : \"\"}\n        data-testid=\"history\"\n      >\n        {list}\n      </CollapsableListDiv>\n    </RecentDiv>\n  );\n};\n\nexport default Recent;\n","import ApolloClient, { gql } from \"apollo-boost\";\n\nexport const QUERY = gql`\n  query GetRepos($searchString: String!, $after: String) {\n    search(type: REPOSITORY, after: $after, first: 30, query: $searchString) {\n      edges {\n        node {\n          ... on Repository {\n            homepageUrl\n            name\n            description\n            url\n            stargazers {\n              totalCount\n            }\n            watchers {\n              totalCount\n            }\n          }\n        }\n        cursor\n      }\n    }\n  }\n`;\n\nexport const ENDPOINT =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://github-search-graphql.herokuapp.com/\"\n    : \"http://192.168.0.125:4000\";\n\nconst client = new ApolloClient({\n  uri: ENDPOINT\n});\n\nexport default client;\n","import { useQuery as useApolloQuery } from \"@apollo/react-hooks\";\nimport { QUERY } from \"../apollo/client\";\nimport { GetRepos } from \"../apollo/client/__generated__/GetRepos\";\nimport { ListProps } from \"../interfaces\";\n\nconst useCustomQuery = ({ searchString, updateHistory }: ListProps) => {\n  const { data, loading, error, fetchMore } = useApolloQuery(QUERY, {\n    variables: {\n      searchString\n    },\n    notifyOnNetworkStatusChange: true,\n    skip: !searchString || searchString.length < 4,\n    onCompleted: () => {\n      updateHistory(searchString);\n    }\n  });\n\n  const updateQuery = (\n    prev: GetRepos,\n    { fetchMoreResult }: { fetchMoreResult?: GetRepos }\n  ) => {\n    if (!fetchMoreResult) {\n      return prev;\n    }\n    return {\n      ...fetchMoreResult,\n      search: {\n        ...fetchMoreResult.search,\n        edges: [...prev?.search.edges, ...fetchMoreResult?.search.edges]\n      }\n    };\n  };\n\n  const fetchMoreRepos = () => {\n    const { edges } = data.search;\n    const lastItemCursor = edges[edges.length - 1].cursor;\n    // https://github.com/apollographql/apollo-client/issues/4114#issuecomment-502111099\n    try {\n      return fetchMore({\n        variables: {\n          after: lastItemCursor\n        },\n        updateQuery\n      });\n    } catch (err) {\n      return undefined;\n    }\n  };\n\n  return {\n    loading,\n    repos: data?.search?.edges,\n    error: error?.message,\n    fetchMore: fetchMoreRepos\n  };\n};\n\nexport default useCustomQuery;\n","/* eslint-disable camelcase */\nimport React from \"react\";\nimport Octicon, {\n  Globe,\n  Eye,\n  MarkGithub,\n  Star,\n  CircleSlash\n} from \"@primer/octicons-react\";\nimport { StyledRepo, Text, Link, IconContainer, Icon } from \"./styled\";\nimport { GetRepos_search_edges_node_Repository } from \"../../apollo/client/__generated__/GetRepos\";\n\nconst Repo = ({\n  homepageUrl,\n  name,\n  description,\n  url,\n  stargazers,\n  watchers\n}: GetRepos_search_edges_node_Repository) => (\n  <StyledRepo>\n    <Text>\n      <h3>\n        <Link\n          href={homepageUrl || url}\n          title=\"open homepage in new tab\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {name}\n        </Link>\n      </h3>\n      <p>{description || \"No description was provided\"}</p>\n    </Text>\n    <IconContainer>\n      <Icon>\n        {homepageUrl ? (\n          <>\n            <Link\n              title=\"homepage\"\n              href={homepageUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Octicon icon={Globe} size=\"medium\" verticalAlign=\"middle\" />\n            </Link>\n            <div>Homepage</div>\n          </>\n        ) : (\n          <div className=\"not-allowed\" title=\"no homepage\">\n            <Octicon icon={CircleSlash} size=\"medium\" verticalAlign=\"middle\" />\n            <div>No Homepage</div>\n          </div>\n        )}\n      </Icon>\n      <Icon>\n        <Link\n          title=\"github page\"\n          href={url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Octicon icon={MarkGithub} size=\"medium\" verticalAlign=\"middle\" />\n        </Link>\n        <div>Github</div>\n      </Icon>\n      <Icon title=\"stargazers\">\n        <Octicon icon={Star} size=\"medium\" verticalAlign=\"middle\" />\n        <div>{stargazers.totalCount}</div>\n      </Icon>\n      <Icon title=\"watchers\">\n        <Octicon icon={Eye} size=\"medium\" verticalAlign=\"middle\" />\n        <div>{watchers.totalCount}</div>\n      </Icon>\n    </IconContainer>\n  </StyledRepo>\n);\n\nexport default Repo;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 100%;\n  position: sticky;\n  bottom: 0;\n  background: grey;\n  z-index: 100;\n  opacity: 0.7;\n  border-radius: 12px;\n  &.enter {\n    opacity: 0;\n    transition: opacity 300ms linear;\n  }\n  &.enter-active {\n    opacity: 0.8;\n    transition: opacity 300ms linear;\n  }\n  &.exit {\n    opacity: 0.8;\n    transition: opacity 300ms linear;\n  }\n  &.exit-active {\n    opacity: 0;\n    transition: opacity 300ms linear;\n  }\n`;\n\nexport default Wrapper;\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Loader from \"react-loader-spinner\";\nimport Wrapper from \"./styled\";\n\nconst Spinner = ({ loading }: { loading: boolean }) => (\n  <CSSTransition in={loading} timeout={300} mountOnEnter unmountOnExit>\n    <Wrapper data-testid=\"spinner\">\n      <Loader type=\"Oval\" color=\"black\" height={100} width={100} />\n    </Wrapper>\n  </CSSTransition>\n);\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const ListDiv = styled.div`\n  grid-area: list;\n  overflow: auto;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  padding: 1em;\n  &.filled {\n    box-shadow: inset 0px 0px 31px #262323;\n    border-radius: 12px;\n  }\n`;\n\nexport const StyledUl = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n","/* eslint-disable camelcase */\nimport React, { SyntheticEvent } from \"react\";\nimport {\n  GetRepos_search_edges,\n  GetRepos_search_edges_node_Repository\n} from \"../../apollo/client/__generated__/GetRepos\";\nimport { ListProps } from \"../../interfaces\";\nimport useCustomQuery from \"../../hooks/useLazyQuery\";\nimport Repo from \"../repo\";\nimport Spinner from \"../spinner\";\nimport { ListDiv, StyledUl } from \"./styled\";\n\nconst List = (props: ListProps) => {\n  const { loading, repos = [], error, fetchMore } = useCustomQuery(props);\n\n  const handleScroll = (e: SyntheticEvent) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.currentTarget;\n    // 100 pixels added for mobile browsers with dynamic controls (Opera Touch)\n    const listBottom = scrollHeight - scrollTop <= clientHeight + 100;\n    // repos.length check prevents onScroll event from firing on window.resize\n    if (listBottom && repos.length && !loading) {\n      fetchMore();\n    }\n  };\n  const getRepoList = () => (\n    <StyledUl>\n      {(repos as GetRepos_search_edges[]).map(({ cursor, node }) => (\n        <Repo\n          key={cursor}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...(node as GetRepos_search_edges_node_Repository)}\n        />\n      ))}\n    </StyledUl>\n  );\n\n  return (\n    <ListDiv\n      className={repos.length && \"filled\"}\n      onScroll={handleScroll}\n      data-testid=\"repoList\"\n    >\n      {error ? <p>{error}</p> : getRepoList()}\n      <Spinner loading={loading} />\n    </ListDiv>\n  );\n};\n\nexport default List;\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100%;\n  box-sizing: border-box;\n  display: grid;\n  background: #b59797;\n  grid-gap: 1rem;\n  padding: 1rem;\n  grid-template-rows: auto auto 1fr auto auto;\n  grid-template-areas:\n    \"header\"\n    \"aside_input\"\n    \"list\"\n    \"aside_recent\"\n    \"footer\";\n  @media (min-width: 1024px) {\n    font-size: 1.5rem;\n    grid-template-areas:\n      \"header header\"\n      \"aside_input list\"\n      \"aside_recent list\"\n      \"aside_recent footer\";\n    padding: 2rem 5rem 2rem 5rem;\n    grid-template-columns: 2fr 4fr;\n    grid-template-rows: auto 1fr 7fr auto;\n  }\n  @media (min-width: 1280px) {\n    padding: 2rem 10rem 2rem 10rem;\n  }\n  & > div {\n    border-radius: 4px;\n    box-shadow: 2px 5px 10px #262323;\n    background: azure;\n    padding: 0 1rem;\n    text-align: center;\n    @media (min-width: 1024px) {\n      padding: 1rem;\n    }\n  }\n`;\n\nexport default Container;\n","import { SearchString, SearchHistory } from \"../../../interfaces\";\n\nexport const HISTORY_MAX_SIZE = 10;\n\nconst updateHistory = (\n  searchString: SearchString,\n  searchHistory: SearchHistory\n) => {\n  if (searchHistory.includes(searchString)) {\n    return searchHistory;\n  }\n  const newHistorySize = searchHistory.unshift(searchString);\n  if (newHistorySize > HISTORY_MAX_SIZE) {\n    searchHistory.pop();\n  }\n  return searchHistory;\n};\n\nexport default updateHistory;\n","import React, { useState, ChangeEvent } from \"react\";\n\nimport Header from \"../header\";\nimport Footer from \"../footer\";\nimport Input from \"../input\";\nimport Recent from \"../recent\";\nimport List from \"../list\";\nimport Container from \"./styled\";\nimport { SearchString, SearchHistory } from \"../../interfaces\";\nimport updateHistory from \"./utils/updateHistory\";\n\nconst App = () => {\n  const [searchString, setSearchString] = useState(\"\");\n  const [searchHistory, setHistory] = useState([] as SearchHistory);\n\n  const handleHistory = () => {\n    const updatedHistory = updateHistory(searchString, [...searchHistory]);\n    setHistory(updatedHistory);\n  };\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchString(event.currentTarget.value);\n  };\n  const setInputValue = (value: SearchString) => {\n    setSearchString(value);\n  };\n  const clearInput = () => {\n    setSearchString(\"\");\n  };\n  return (\n    <Container>\n      <Header />\n      <Input value={searchString} onChange={onChange} clearInput={clearInput} />\n      <Recent\n        searchHistory={searchHistory}\n        getSearchStringFromHistory={setInputValue}\n      />\n      <List searchString={searchString} updateHistory={handleHistory} />\n      <Footer />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport App from \"./components/app\";\nimport client from \"./apollo/client\";\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}